# Copyright 2021 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main configuration file for the application.
# ~~~~~
include "backend.conf"

appName = customs-inventory-linking-imports
appUrl = "http://"${appName}"-host"

application.logger.name = ${appName}

bootstrap.http.headersAllowlist += "api-subscription-fields-id"
bootstrap.http.headersAllowlist += "X-Client-ID"
bootstrap.http.headersAllowlist += "X-Badge-Identifier"

xsd.locations.validatemovement += "/api/conf/1.0/schemas/imports/inventoryLinkingImportValidateMovementResponse.xsd"
xsd.locations.validatemovement += "/api/conf/1.0/schemas/imports/inventoryLinkingImportCommonTypes.xsd"
xsd.locations.goodsarrival += "/api/conf/1.0/schemas/imports/inventoryLinkingImportArriveGoods.xsd"
xsd.locations.goodsarrival += "/api/conf/1.0/schemas/imports/inventoryLinkingImportCommonTypes.xsd"

xml.max-errors = 25

circuitBreaker.numberOfCallsToTriggerStateChange = 500
circuitBreaker.unstablePeriodDurationInMillis = 10000
circuitBreaker.unavailablePeriodDurationInMillis = 1000

# Fix SSL Engine closed already exceptions
http-verbs.retries.ssl-engine-closed-already.enabled = true

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"

# Provides an implementation of AuthConnector.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform backend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.backend.BackendModule"
play.http.filters = "uk.gov.hmrc.play.bootstrap.backend.filters.BackendFilters"

# Additional play modules can be added here
play.modules.enabled += "uk.gov.hmrc.customs.inventorylinking.imports.config.ImportsModule"
play.modules.enabled += "uk.gov.hmrc.customs.api.common.CustomsApiCommonModule"

# Dummy application ids to maintain access as private
api.access.version-1.0.whitelistedApplicationIds.0 = 99999999-9999-9999-9999-999999999999
api.access.version-2.0.whitelistedApplicationIds.0 = 99999999-9999-9999-9999-999999999999

# The application languages
play.i18n.langs = ["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router=prod.Routes


# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

controllers {
  # 300 is the default, you may need to change this according to your needs
  confidenceLevel = 300

  com.kenshoo.play.metrics.MetricsController = {
    needsLogging = false
    needsAuditing = false
  }

}

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
  name = ${appName}
  rateUnit = SECONDS
  durationUnit = SECONDS
  showSamples = true
  jvm = true
  enabled = true
}


# Microservice specific config

auditing {
  enabled=false
  traceRequests=true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

microservice {
  metrics {
    graphite {
      host = graphite
      port = 2003
      prefix = play.${appName}.
      enabled = false
    }
  }

  services {
    auth {
      host=localhost
      port=9479
    }

    api-subscription-fields {
      host = localhost
      port = 9650
      context = /field
    }

    validatemovement {
      host = localhost
      port = 9479
      bearer-token = "real"
      context = /inventorylinkingimports/validatemovementresponse
    }

    goodsarrival {
      host = localhost
      port = 9479
      bearer-token = "real"
      context = /inventorylinkingimports/goodsarrivalnotification
    }

    customs-declarations-metrics {
      host = localhost
      port = 9827
      context = /log-times
    }
    v2 {
      validatemovement {
        host = localhost
        port = 9479
        bearer-token = "real"
        context = /inventorylinkingimports/validatemovementresponse
      }

      goodsarrival {
        host = localhost
        port = 9479
        bearer-token = "real"
        context = /inventorylinkingimports/goodsarrivalnotification
      }
    }
  }
}
